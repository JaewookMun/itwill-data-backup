package xyz.itwill.dao;

import java.io.IOException;
import java.io.InputStream;
import java.util.List;

import org.apache.ibatis.io.Resources;
import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.session.SqlSessionFactoryBuilder;

import xyz.itwill.dto.Student;

public class StudentDAO {
	private static StudentDAO _dao;
	
	private StudentDAO() {
		
	}
	
	static {
		_dao=new StudentDAO();
	}
	
	public static StudentDAO getDAO() {
		return _dao;
	}
	
		// @@@@@
	// SqlSessionFactory 인스턴스를 생성하여 반환하는 메소드
	// => mybatis 환경설정파일을 읽어 SqlSessionFactory 인스턴스 생성
	// SqlSessionFactory : SqlSession 인스턴스를 생성하여 제공하는 인스턴스
	private SqlSessionFactory getSqlSessionFactory() {
		// String resource="xyz/itwill/dao/mybatis-config.xml";
			// xyz.itwill.dao 팩키지 안에 config 파일을 설정했을 경우.
			// 자바 파일이 아닐경우 /로 파일 경로 표현
		String resource="mybatis-config.xml";
			// 여기서 error가 발생하면 environment or mapper에서 문제가 있는 것이다.
		
		InputStream inputStream=null;
		try {
			// mybatis 환경설정파일을 읽기 위한 입력스트림을 생성하여 저장
			// Resources.getResourceAsStream(String resource) : 프로젝트에 존재하는 리소스
			// 파일(XML)의 경로를 제공받아 입력스트림을 생성하여 반환하는 메소드
			inputStream=Resources.getResourceAsStream(resource);
				// org.apache.ibatis.io 사용
		} catch (IOException e) {
			throw new IllegalArgumentException(e);
		}

		// SqlSessionFactoryBuilder : SqlSessionFactory 인스턴스를 생성하는 기능을 제공하는 메소드
		// SqlSessionFactoryBuilder.build(InputStream inputStream) : mybatis 환경설정파일의 정보를
		// 입력스트림을 이용하여 제공받아 SqlSessionFactory 인스턴스를 생성하여 반환하는 메소드
		return new SqlSessionFactoryBuilder().build(inputStream);
	}
	
	// STUDENT 테이블에 저장된 모든 학생정보를 검색하여 반환하는 메소드
	public List<Student> selectStudentList(){
		// SqlSessionFactory.openSession() : SqlSession 인스턴스를 생성하여 반환하는 메소드
		// SqlSession : 맵퍼 파일에 등록된 SQL 명령을 얻어와 DBMS 서버에 전달하여 실행하고
		// SQL명령의 실행결과를 Java 자료형의 결과로 자동 매핑하여 반환하는 인스턴스
		SqlSession sqlSession=getSqlSessionFactory().openSession();
		
		try {
			// SqlSession.selectList(String elementId) : 맵퍼 파일에 등록된 SELECT 명령을 제공받아
			// DBMS 서버에 전달하여 실행하고 검색결과를 매핑하여 List 인스턴스로 반환하는 메소드
			// elementId : 맵퍼 파일의 mapper 엘리먼트의 namespace 속성값과 select 엘리먼트의
			// id 속성값을 이용하여 맵퍼 파일에 등록된 SQL 명령을 제공받아 사용
			return sqlSession.selectList("xyz.itwill.mapper.StudentMapper.selectStudentList");
		} finally {
			// SqlSession.close() : SqlSession 인스턴스를 제거하는 메소드
				// SqlSession 이 사용한 모든 sql 관련 인스턴스 종료
			sqlSession.close();
		}
				// MyBatis를 통해 간단히 처리가능
			/*
				error 발생 시
				1. config 
				2. mapper파일
			 */
	}
	
}
