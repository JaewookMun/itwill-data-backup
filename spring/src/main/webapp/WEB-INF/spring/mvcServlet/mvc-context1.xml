<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Command Controller 클래스를 Spring Bean으로 등록 -->
		<!-- mvc가 기본 네임스페이스이기 때문에 beans: 네임스페이스에 bean을 붙여야 한다. -->
	<beans:bean class="xyz.itwill09.mvc.ListController" id="listController"/>
	<beans:bean class="xyz.itwill09.mvc.ViewController" id="viewController"/>
	
	<!-- Spring Framework에서 제공하는 SimpleUrlHandlerMapping 클래스를 Spring Bean으로 등록 -->
	<!-- SimpleUrlHandlerMapping : Front Controller(DispatcherServlet)에게 클라이언트의 요청을
	처리하기 위해 Command Controller의 Spring Bean 객체에 대한 beanName을 제공하기 위한 클래스 -->
	<!-- => mappings 필드에 Map 객체를 생성하여 인젝션 처리 -->
	<!-- => 클라이언트의 요청정보(Key)와 Command Controller 클래스의 Spring Bean(Value)을
	Map 객체의 엔트리로 추가 -->
	<beans:bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
		<!-- 내부적으로 설정된 클래스이기 때문에 id를 따로 설정하지 않아도 된다. -->
		<beans:property name="mappings">
			<beans:props>
				<beans:prop key="/list.do">listController</beans:prop>
				<beans:prop key="/view.do">viewController</beans:prop>
					<!-- key : 클라이언트 요청정보, value : Command Controller 이름 -->
			</beans:props>
		</beans:property>
	</beans:bean>
	
		<!-- 동작되기 위한 아키텍쳐가 다 완성되어있기 때문에 필요한 정보만 설정하면됨. -->
		<!-- 내부 구조 완성 - 해당하는 정보만 입력 -->
	
			
</beans:beans>
