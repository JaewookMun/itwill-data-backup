<?xml version="1.0" encoding="UTF-8"?>
<taglib version="2.0" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xml="http://www.w3.org/XML/1998/namespace" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd ">
  <!-- description : TLD 파일에 대한 설명을 설정하기 위한 엘리먼트 -->
  	<!-- 꼭 작성할 필요는 없다(생략가능). 어떤 커스텀태그들을 설정했는지 이야기 -->
  <description>단순한 형태의 커스텀 태그 구현</description>
  <!-- tlib-version : TLD 파일의 버전을 설정하기 위한 엘리먼트 -->
  <tlib-version>1.0</tlib-version>
  <!-- short-name : TLD 파일의 이름을 설정하기 위한 엘리먼트 -->
    <!-- 다른 태그들과 마찬가지로 많은 의미는없다. version과 name은 작성하는 것을 권장 -->
  <short-name>NMTOKEN</short-name>
  <!-- uri : JSP 문서에서 TLD 파일을 불러오기 위해 사용하는 식별자를 설정하기 위한 엘리먼트 -->
  <uri>http://www.itwill.xyz/mvc/simple</uri>
  	<!-- 위 경로는 아무런 의미가 없다. (tld 파일을 구분하기 위해 사용 [식별자] - 중복만안되면 된다.) -->
  
  <!-- tag : JSP 문서에서 사용할 커스텀 태그를 설정하기 위한 상위 엘리먼트 -->	
  <tag>
  	<!-- name : 커스텀 태그명을 설정하기 위한 엘리먼트 -->
  	<name>hello</name>
  	<!-- 커스텀 태그를 사용할 경우 호출될 메소드가 선언된 클래스를 설정하기 위한 엘리먼트 -->
  	<tag-class>xyz.itwill.custom.HelloTag</tag-class>
  	<!-- body-content : 커스텀 태그의 태그내용을 설정하기 위한 엘리먼트 -->
  	<!-- => empty : 태그내용이 없는 커스텀 태그를 설정하기 위한 엘리먼트 값 -->
  	<body-content>empty</body-content>
  		<!-- 위 3 요소는 꼭 작성해줘야하는 필수요소이다. -->
  	
  </tag>	
  	<!-- 
  		tld 파일을 추가적으로 만들 필요 없이 tag엘리먼트를 통해서 사용자태그를 추가할 수 있다. 
  		custom.tld 파일을 통해 hello, helloMessage 태그를 사용할 수 있다.
  	-->
  <tag>
  	<name>helloMessage</name>
  	<tag-class>xyz.itwill.custom.HelloMessageTag</tag-class>
  	<body-content>empty</body-content>
  	<!-- attribute : 태그 속성을 설정하기 위한 상위 엘리먼트 -->
  	<attribute>
  		<!-- name : 커스텀 태그의 속성명을 설정하기 위한 엘리먼트 -->
  		<!-- => 태그 클래스의 필드명과 같은 이름으로 작성 -->
  		<name>name</name>
  		<!-- required : 태그 속성의 필수 여부를 설정하기 위한 엘리먼트 -->
  		<!-- => false : 선택 속성(기본), true : 필수 속성 -->
  		<required>true</required>
  	</attribute>
  </tag>
  	<!-- 같은 목적의 태그들 -> 같은곳에 등록. -->
  <tag>
  	<name>helloBody</name>
  	<tag-class>xyz.itwill.custom.HelloBodyTag</tag-class>
  	<!-- body-content 엘리먼트값으로 JSP를 설정하면 태그내용으로 JSP 명령 사용 -->
  		<!-- 일반값을 써도 되지만 JSP 가 들어간다. -->
  	<body-content>JSP</body-content>
  	<attribute>
  		<name>test</name>
  		<required>true</required>
  		<!-- rtexprvalue : 태그 속성값으로 JSP Expression 또는 EL의 사용 여부를 설정하는 엘리먼트 -->
  		<!-- => false : 사용 불가능(기본), true : 사용 가능 -->
  			<!-- false처리하면 커스텀 태그의 속성에 EL이나 JSP Expression을 사용하지 못함 -->
  		<rtexprvalue>true</rtexprvalue>
  			<!-- rt : runtime -->
  	</attribute>
  </tag>
</taglib>
